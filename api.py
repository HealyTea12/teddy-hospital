import os

import qrcode
import reportlab.pdfgen.canvas
from fastapi import APIRouter, Query, Response
from fastapi.responses import FileResponse

from config import config

router = APIRouter()


@router.get(
    "/qr",
    responses={200: {"content": {"image/png": {}}}},
    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response,
)
def gen_qr_codes(n: int = Query(ge=0, le=1000)):
    qrs = []
    # Ensure the qrs directory exists
    os.makedirs("qrs", exist_ok=True)

    for i in range(n):
        url = config.storage[0].create_folder(f"/{i}")
        qr = qrcode.QRCode(
            version=1,
            error_correction=qrcode.ERROR_CORRECT_L,
            box_size=10,
            border=4,
        )
        qr.add_data(f"{url}")
        qr.make(fit=True)
        img = qr.make_image(fill_color="black", back_color="white")

        # Proper way to save the image using a file object
        output_path = f"qrs/qr_{i}.png"
        with open(output_path, "wb") as f:
            img.save(f)
        qrs.append(f"qr_{i}.png")

    if n > 0:
        return FileResponse(
            path=f"qrs/qr_{n-1}.png",
            media_type="image/png",
            filename=f"qr_{n-1}.png",
        )
    else:
        return Response(content="No QR codes generated", media_type="text/plain")


@router.get(
    "/qr/pdf",
    responses={200: {"content": {"application/pdf": {}}}},
)
def gen_qr_pdf(size: int = 100):
    # Ensure the qrs directory exists
    if not os.path.exists("qrs"):
        os.makedirs("qrs")

    c = reportlab.pdfgen.canvas.Canvas("qr.pdf")
    x, y = 30, 30
    for file in os.listdir("qrs"):
        if file.endswith(".png"):
            c.drawImage(f"qrs/{file}", x, y, width=size, height=size)
            x += size + 10
            if x > 500:
                x = 10
                y += size + 10
    c.save()
    return FileResponse(
        path="qr.pdf",
        media_type="application/pdf",
        filename="qr.pdf",
    )
